{"id":"../node_modules/@restart/hooks/esm/usePrevious.js","dependencies":[{"name":"C:\\Users\\bjarn\\Documents\\GitHub\\dragon\\frontend\\package.json","includedInParent":true,"mtime":1584457974900},{"name":"C:\\Users\\bjarn\\Documents\\GitHub\\dragon\\frontend\\.babelrc","includedInParent":true,"mtime":1584456683877},{"name":"C:\\Users\\bjarn\\Documents\\GitHub\\dragon\\frontend\\node_modules\\@restart\\hooks\\package.json","includedInParent":true,"mtime":1584456685128},{"name":"react","loc":{"line":1,"column":34},"parent":"C:\\Users\\bjarn\\Documents\\GitHub\\dragon\\frontend\\node_modules\\@restart\\hooks\\esm\\usePrevious.js","resolved":"C:\\Users\\bjarn\\Documents\\GitHub\\dragon\\frontend\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = usePrevious;\n\nvar _react = require(\"react\");\n\n/**\r\n * Store the last of some value. Tracked via a `Ref` only updating it\r\n * after the component renders.\r\n *\r\n * Helpful if you need to compare a prop value to it's previous value during render.\r\n *\r\n * ```ts\r\n * function Component(props) {\r\n *   const lastProps = usePrevious(props)\r\n *\r\n *   if (lastProps.foo !== props.foo)\r\n *     resetValueFromProps(props.foo)\r\n * }\r\n * ```\r\n *\r\n * @param value the value to track\r\n */\nfunction usePrevious(value) {\n  var ref = (0, _react.useRef)(null);\n  (0, _react.useEffect)(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":2,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":15}},{"name":"usePrevious","generated":{"line":27,"column":9},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":24}},{"generated":{"line":27,"column":20},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":15}},{"name":"value","generated":{"line":27,"column":21},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":36}},{"generated":{"line":27,"column":26},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":15}},{"generated":{"line":27,"column":28},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":20,"column":43}},{"generated":{"line":28,"column":0},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":2}},{"name":"ref","generated":{"line":28,"column":6},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":6}},{"generated":{"line":28,"column":9},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":9}},{"generated":{"line":28,"column":12},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":12}},{"generated":{"line":28,"column":31},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":19}},{"generated":{"line":28,"column":35},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":12}},{"generated":{"line":28,"column":36},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":21,"column":2}},{"generated":{"line":29,"column":0},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":22,"column":2}},{"generated":{"line":29,"column":24},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":22,"column":12}},{"generated":{"line":29,"column":36},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":22,"column":24}},{"name":"ref","generated":{"line":30,"column":0},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":4}},{"name":"ref","generated":{"line":30,"column":4},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":4}},{"generated":{"line":30,"column":7},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":7}},{"name":"current","generated":{"line":30,"column":8},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":8}},{"generated":{"line":30,"column":15},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":4}},{"name":"value","generated":{"line":30,"column":18},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":18}},{"generated":{"line":30,"column":23},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":23,"column":4}},{"generated":{"line":31,"column":0},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":24,"column":3}},{"generated":{"line":31,"column":3},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":22,"column":2}},{"generated":{"line":32,"column":0},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":25,"column":2}},{"name":"ref","generated":{"line":32,"column":9},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":25,"column":9}},{"generated":{"line":32,"column":12},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":25,"column":12}},{"name":"current","generated":{"line":32,"column":13},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":25,"column":13}},{"generated":{"line":32,"column":20},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":25,"column":2}},{"generated":{"line":33,"column":0},"source":"../node_modules/@restart/hooks/esm/usePrevious.js","original":{"line":26,"column":1}}],"sources":{"../node_modules/@restart/hooks/esm/usePrevious.js":"import { useEffect, useRef } from 'react';\r\n/**\r\n * Store the last of some value. Tracked via a `Ref` only updating it\r\n * after the component renders.\r\n *\r\n * Helpful if you need to compare a prop value to it's previous value during render.\r\n *\r\n * ```ts\r\n * function Component(props) {\r\n *   const lastProps = usePrevious(props)\r\n *\r\n *   if (lastProps.foo !== props.foo)\r\n *     resetValueFromProps(props.foo)\r\n * }\r\n * ```\r\n *\r\n * @param value the value to track\r\n */\r\n\r\nexport default function usePrevious(value) {\r\n  var ref = useRef(null);\r\n  useEffect(function () {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}"},"lineCount":null}},"error":null,"hash":"2d31f95bd8ebcc2ac693ec6f29092a1b","cacheData":{"env":{}}}